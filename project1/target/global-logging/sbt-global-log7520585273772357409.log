[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\henry\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\henry\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (AdoptOpenJDK Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 73.5129ms
[debug]       Load.loadUnit: defsScala took 0.3647ms
[debug] [Loading] Scanning directory C:\Users\henry\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.6301 ms
[debug]           Load.resolveProject(global-plugins) took 58.7568ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\henry\.sbt\1.0\plugins, plugins: List(<none>))) took 100.3273ms
[debug] [Loading] Done in C:\Users\henry\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 134.2649ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.31ms
[debug]     Load.loadUnit(file:/C:/Users/henry/.sbt/1.0/plugins/, ...) took 216.6161ms
[debug]   Load.apply: load took 453.7876ms
[debug]   Load.apply: resolveProjects took 7.9673ms
[debug]   Load.apply: finalTransforms took 113.9291ms
[debug]   Load.apply: config.delegates took 8.6859ms
[debug]   Load.apply: Def.make(settings)... took 1228.5317ms
[debug]   Load.apply: structureIndex took 181.5243ms
[debug]   Load.apply: mkStreams took 1.6228ms
[info] loading global plugins from C:\Users\henry\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4722.8961ms
[debug]           Load.loadUnit: plugins took 18.2408ms
[debug]           Load.loadUnit: defsScala took 0.0042ms
[debug] [Loading] Scanning directory C:\Users\henry\Downloads\project1\project1\project
[debug]             Load.loadUnit: mkEval took 6.8895ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\Downloads\project1\project1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5114 ms
[info] loading settings for project project1-build from idea.sbt ...
[debug]               Load.resolveProject(project1-build) took 3.8639ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project1-build, base: C:\Users\henry\Downloads\project1\project1\project, plugins: List(<none>))) took 7.0304ms
[debug] [Loading] Done in C:\Users\henry\Downloads\project1\project1\project, returning: (project1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 129.4546ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.374ms
[debug]         Load.loadUnit(file:/C:/Users/henry/Downloads/project1/project1/project/, ...) took 153.0157ms
[debug]       Load.apply: load took 155.7932ms
[debug]       Load.apply: resolveProjects took 0.114ms
[debug]       Load.apply: finalTransforms took 30.7294ms
[debug]       Load.apply: config.delegates took 0.4589ms
[debug]       Load.apply: Def.make(settings)... took 115.3899ms
[debug]       Load.apply: structureIndex took 62.6905ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\henry\Downloads\project1\project1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 810.9988ms
[debug]     Load.loadUnit: defsScala took 0.0078ms
[debug] [Loading] Scanning directory C:\Users\henry\Downloads\project1\project1
[debug]       Load.loadUnit: mkEval took 0.3216ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\Downloads\project1\project1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.9639 ms
[info] loading settings for project project1 from build.sbt ...
[debug]         Load.resolveProject(project1) took 33.8765ms
[debug]       Load.loadTransitive: finalizeProject(Project(id project1, base: C:\Users\henry\Downloads\project1\project1, plugins: List(<none>))) took 37.9311ms
[debug] [Loading] Done in C:\Users\henry\Downloads\project1\project1, returning: (project1)
[debug]     Load.loadUnit: loadedProjectsRaw took 208.05ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.8015ms
[debug]   Load.loadUnit(file:/C:/Users/henry/Downloads/project1/project1/, ...) took 1024.6786ms
[debug] Load.apply: load took 1026.3872ms
[debug] Load.apply: resolveProjects took 0.1105ms
[debug] Load.apply: finalTransforms took 35.6511ms
[debug] Load.apply: config.delegates took 0.4137ms
[debug] Load.apply: Def.make(settings)... took 146.3424ms
[debug] Load.apply: structureIndex took 58.2091ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to csci3155_s21_project1 (in build file:/C:/Users/henry/Downloads/project1/project1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51324 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51324, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to csci3155_s21_project1 (in build file:/C:/Users/henry/Downloads/project1/project1/)
[debug] > Exec(idea-shell, None, None)
