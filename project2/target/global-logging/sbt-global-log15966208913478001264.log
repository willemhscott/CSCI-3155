[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\henry\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\henry\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 10)
[debug]       Load.loadUnit: plugins took 193.5655ms
[debug]       Load.loadUnit: defsScala took 0.5893ms
[debug] [Loading] Scanning directory C:\Users\henry\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 55.4107 ms
[debug]           Load.resolveProject(global-plugins) took 72.299ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\henry\.sbt\1.0\plugins, plugins: List(<none>))) took 185.4386ms
[debug] [Loading] Done in C:\Users\henry\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 248.5856ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.328ms
[debug]     Load.loadUnit(file:/C:/Users/henry/.sbt/1.0/plugins/, ...) took 457.4119ms
[debug]   Load.apply: load took 819.5141ms
[debug]   Load.apply: resolveProjects took 12.0135ms
[debug]   Load.apply: finalTransforms took 110.4901ms
[debug]   Load.apply: config.delegates took 14.7031ms
[debug]   Load.apply: Def.make(settings)... took 1530.7895ms
[debug]   Load.apply: structureIndex took 105.8093ms
[debug]   Load.apply: mkStreams took 2.1327ms
[info] loading global plugins from C:\Users\henry\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5155.0973ms
[debug]           Load.loadUnit: plugins took 62.7268ms
[debug]           Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\henry\PycharmProjects\csci3155_notebooks\project2\project
[debug]             Load.loadUnit: mkEval took 17.3974ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6044 ms
[info] loading settings for project project2-build from idea.sbt ...
[debug]               Load.resolveProject(project2-build) took 4.8755ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project2-build, base: C:\Users\henry\PycharmProjects\csci3155_notebooks\project2\project, plugins: List(<none>))) took 8.2754ms
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project2\project, returning: (project2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 308.41ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.3781ms
[debug]         Load.loadUnit(file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project2/project/, ...) took 383.327ms
[debug]       Load.apply: load took 386.504ms
[debug]       Load.apply: resolveProjects took 0.2122ms
[debug]       Load.apply: finalTransforms took 15.1032ms
[debug]       Load.apply: config.delegates took 1.0727ms
[debug]       Load.apply: Def.make(settings)... took 95.6377ms
[debug]       Load.apply: structureIndex took 44.5792ms
[debug]       Load.apply: mkStreams took 0.0046ms
[info] loading project definition from C:\Users\henry\PycharmProjects\csci3155_notebooks\project2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 909.1322ms
[debug]     Load.loadUnit: defsScala took 0.0152ms
[debug] [Loading] Scanning directory C:\Users\henry\PycharmProjects\csci3155_notebooks\project2
[debug]       Load.loadUnit: mkEval took 0.321ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project2, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7496 ms
[info] loading settings for project project2 from build.sbt ...
[debug]         Load.resolveProject(project2) took 55.667ms
[debug]       Load.loadTransitive: finalizeProject(Project(id project2, base: C:\Users\henry\PycharmProjects\csci3155_notebooks\project2, plugins: List(<none>))) took 60.1688ms
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project2, returning: (project2)
[debug]     Load.loadUnit: loadedProjectsRaw took 248.4759ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.2292ms
[debug]   Load.loadUnit(file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project2/, ...) took 1178.4524ms
[debug] Load.apply: load took 1185.7502ms
[debug] Load.apply: resolveProjects took 0.2255ms
[debug] Load.apply: finalTransforms took 36.3013ms
[debug] Load.apply: config.delegates took 0.5188ms
[debug] Load.apply: Def.make(settings)... took 100.0068ms
[debug] Load.apply: structureIndex took 33.9496ms
[debug] Load.apply: mkStreams took 0.0067ms
[info] set current project to csci3155_spring2021_project2 (in build file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63326 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63326, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to csci3155_spring2021_project2 (in build file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project2/)
[debug] > Exec(idea-shell, None, None)
