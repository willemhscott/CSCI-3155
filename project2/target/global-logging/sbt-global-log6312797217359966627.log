[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\henry\AppData\Local\Temp\idea7.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\henry\AppData\Local\Temp\idea7.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 10)
[debug]       Load.loadUnit: plugins took 105.5649ms
[debug]       Load.loadUnit: defsScala took 0.270999ms
[debug] [Loading] Scanning directory C:\Users\henry\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.564501 ms
[debug]           Load.resolveProject(global-plugins) took 56.9129ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\henry\.sbt\1.0\plugins, plugins: List(<none>))) took 108.147499ms
[debug] [Loading] Done in C:\Users\henry\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 132.6365ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.410799ms
[debug]     Load.loadUnit(file:/C:/Users/henry/.sbt/1.0/plugins/, ...) took 247.127299ms
[debug]   Load.apply: load took 463.4074ms
[debug]   Load.apply: resolveProjects took 6.5526ms
[debug]   Load.apply: finalTransforms took 73.933699ms
[debug]   Load.apply: config.delegates took 9.2344ms
[debug]   Load.apply: Def.make(settings)... took 766.8941ms
[debug]   Load.apply: structureIndex took 189.637201ms
[debug]   Load.apply: mkStreams took 3.251701ms
[info] loading global plugins from C:\Users\henry\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3365.0025ms
[debug]           Load.loadUnit: plugins took 39.9029ms
[debug]           Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\henry\PycharmProjects\csci3155_notebooks\project4\project
[debug]             Load.loadUnit: mkEval took 8.703699ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project4\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.328501 ms
[info] loading settings for project project4-build from idea7.sbt ...
[debug]               Load.resolveProject(project4-build) took 5.436099ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project4-build, base: C:\Users\henry\PycharmProjects\csci3155_notebooks\project4\project, plugins: List(<none>))) took 8.5921ms
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project4\project, returning: (project4-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3169.3948ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.3801ms
[debug]         Load.loadUnit(file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project4/project/, ...) took 3219.1238ms
[debug]       Load.apply: load took 3220.9892ms
[debug]       Load.apply: resolveProjects took 0.1099ms
[debug]       Load.apply: finalTransforms took 12.251299ms
[debug]       Load.apply: config.delegates took 0.364801ms
[debug]       Load.apply: Def.make(settings)... took 80.520799ms
[debug]       Load.apply: structureIndex took 31.5985ms
[debug]       Load.apply: mkStreams took 0.002401ms
[info] loading project definition from C:\Users\henry\PycharmProjects\csci3155_notebooks\project4\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4762.5938ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\henry\PycharmProjects\csci3155_notebooks\project4
[debug]       Load.loadUnit: mkEval took 0.269999ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project4, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.216099 ms
[info] loading settings for project project4 from build.sbt ...
[debug]         Load.resolveProject(project4) took 44.8926ms
[debug]       Load.loadTransitive: finalizeProject(Project(id project4, base: C:\Users\henry\PycharmProjects\csci3155_notebooks\project4, plugins: List(<none>))) took 48.4868ms
[debug] [Loading] Done in C:\Users\henry\PycharmProjects\csci3155_notebooks\project4, returning: (project4)
[debug]     Load.loadUnit: loadedProjectsRaw took 2974.3078ms
[debug]     Load.loadUnit: cleanEvalClasses took 23.232299ms
[debug]   Load.loadUnit(file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project4/, ...) took 7760.7784ms
[debug] Load.apply: load took 7762.787399ms
[debug] Load.apply: resolveProjects took 0.1028ms
[debug] Load.apply: finalTransforms took 37.0257ms
[debug] Load.apply: config.delegates took 0.3595ms
[debug] Load.apply: Def.make(settings)... took 70.998799ms
[debug] Load.apply: structureIndex took 28.8287ms
[debug] Load.apply: mkStreams took 0.004ms
[info] set current project to csci3155_spring2021_project2 (in build file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project4/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61236 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61236, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to csci3155_spring2021_project2 (in build file:/C:/Users/henry/PycharmProjects/csci3155_notebooks/project4/)
[debug] > Exec(idea-shell, None, None)
